# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  tags:
    include: ["azurep"]

resources:
  - repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: "610f196e-a6c0-4c89-9869-bfd383766601"
  containerRegistry: "lifelike.azurecr.io"
  tag: "$(Build.SourceVersion)"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build and push stage docker images
    variables:
      azureContainerRegistry: lifelike.azurecr.io
      azureSubscriptionEndpoint: lifelike
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: $(dockerRegistryServiceConnection)
              command: "login"

          - script: "docker pull $(containerRegistry)/kg-appserver:latest"
            displayName: Pull latest appserver image for caching
            continueOnError: true

          - script: "docker pull $(containerRegistry)/kg-webserver:latest"
            displayName: Pull latest webserver image for caching
            continueOnError: true

          - task: Docker@2
            displayName: Build Appserver Image
            inputs:
              command: build
              repository: kg-appserver
              dockerfile: appserver/Dockerfile
              arguments: "--cache-from=$(containerRegistry)/kg-appserver:latest"
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
                latest

          - task: Docker@2
            displayName: Push Appserver Image
            inputs:
              command: push
              repository: kg-appserver
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
                latest

          - task: Docker@2
            displayName: Build Webserver Image
            inputs:
              command: build
              repository: kg-webserver
              dockerfile: client/Dockerfile
              arguments: "--cache-from=$(containerRegistry)/kg-webserver:latest"
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
                latest

          - task: Docker@2
            displayName: Push Webserver Image
            inputs:
              command: push
              repository: kg-webserver
              containerRegistry: $(dockerRegistryServiceConnection)
              tags: |
                $(tag)
                latest

      - deployment: VMDeploy
        displayName: QA Deployment
        environment: 'lifelike-qa'
        pool:
          vmImage: 'ubuntu-latest'
        strategy:
          runOnce:
            deploy:
              steps:
                - task: DockerCompose@0
                  displayName: Container registry login
                  inputs:
                    containerregistrytype: Azure Container Registry
                    azureSubscriptionEndpoint: $(azureSubscriptionEndpoint)
                    azureContainerRegistry: $(azureContainerRegistry)
                    dockerComposeFile: docker-compose.prod.yml