# local development overrides

version: '3.5'

services:
    pgdatabase:
        command: postgres -c max_wal_size=2GB -c log_statement='all'
        container_name: pg-database
        image: postgres:10.2
        networks:
            - backend
        ports:
            - "5431:5432"
        volumes:
            -  ./postgres/db:/var/lib/postgresql/data

    appserver:
        container_name: appserver
        image: lifelike.azurecr.io/kg-appserver:${GITHUB_HASH}
        ports:
            - "5000:5000"
        environment:
            - NEO4J_HOST=n4j-database
            - NEO4J_AUTH=neo4j/password
            - NEO4J_SCHEME=bolt
            - NEO4J_PORT=7687
            - FLASK_DEBUG=1
            - FLASK_ENV=development
            - FLASK_APP=app
            - FLASK_APP_CONFIG=Development
            - POSTGRES_HOST=pgdatabase
            # Postgres defaults
            - POSTGRES_PORT=5432
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
            - POSTGRES_DB=postgres
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
            - ELASTIC_FILE_INDEX_ID=file_ci
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - REDIS_PASSWORD=password
            - REDIS_SSL=false
            - LMDB_HOME_FOLDER='/home/n4j/tests/database/services/annotations'
        volumes:
            - ./appserver/neo4japp/tests/database/services/annotations/lmdb:/home/n4j/tests/database/services/annotations/lmdb
        networks:
            - frontend
            - backend
        depends_on:
            - database
            - pgdatabase

    database:
        container_name: n4j-database
        environment:
            - NEO4J_AUTH=neo4j/password
        image: neo4j:3.5.14
        ports:
            - "7474:7474"
            - "7687:7687"
        networks:
            - backend
        volumes:
            - ./db/data:/data
            - ./db/logs:/logs
            - ./db/plugins:/plugins

    elasticsearch:
        container_name: elasticsearch
        build:
            dockerfile: Dockerfile
            context: elasticsearch
        environment:
            - discovery.type=single-node
            - http.max_content_length=200mb  #allow 200mb of content to be sent for indexing
            - bootstrap.memory_lock=true
            - xpack.graph.enabled=false
            - xpack.watcher.enabled=false
            - xpack.license.self_generated.type=basic
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports:
            - "9200:9200"
            - "9300:9300"
        networks:
            - backend

networks:
    frontend:
    backend:
