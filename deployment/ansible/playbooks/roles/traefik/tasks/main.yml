- include_vars: traefik.yml
- include_vars: vars.yml

- name: Create traefik directory
  file:
    path: /opt/traefik
    state: directory
    owner: ***ARANGO_USERNAME***
    group: ***ARANGO_USERNAME***

- name: Create acme.json
  file:
    path: /opt/traefik/acme.json
    state: touch
    owner: ***ARANGO_USERNAME***
    group: ***ARANGO_USERNAME***
    mode: "600"

- name: Copy traefik config file
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: ***ARANGO_USERNAME***
    group: ***ARANGO_USERNAME***
  with_items:
    - {
        src: "templates/traefik.yml",
        dest: "/opt/traefik/traefik.yml",
    }

- name: Copy traefik services file
  copy:
    src: "files/services.yml"
    dest: "/opt/traefik/services.yml"
    owner: ***ARANGO_USERNAME***
    group: ***ARANGO_USERNAME***

- name: Build and deploy traefik
  community.general.docker_container:
    name: traefik
    image: "{{ traefik_docker_image }}"
    state: started
    restart: yes
    ports:
        - 80:80
        - 443:443
    volumes:
        - /opt/traefik/traefik.yml:/traefik.yml
        - /opt/traefik/services.yml:/services.yml
        - /opt/traefik/acme.json:/acme.json
        - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      traefik.enable: "true"
      traefik.http.routers.dashboard.rule: "Host(`azure.***ARANGO_DB_NAME***.bio`)"
      traefik.http.routers.dashboard.tls: "true"
      traefik.http.routers.dashboard.tls.certresolver: le
      traefik.http.routers.dashboard.service: api@internal
      traefik.http.routers.dashboard.middlewares: admin-auth
      traefik.http.middlewares.admin-auth.basicauth.users: "{{ traefik_credentials }}"
