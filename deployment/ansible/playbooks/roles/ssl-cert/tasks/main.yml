- name: Create Nginx Directory
  file:
    path: "{{ nginx_conf_dir }}"
    state: directory

- name: Check if TLS certificate exists
  become: true
  stat:
    path: "{{ certbot_conf_dir }}"
  register: certbot_certs

- name: Create certificate directory
  become: true
  file:
    path: "{{ certbot_conf_dir }}"
    state: directory
  when: not certbot_certs.stat.exists

- name: Create temporary index.html directory
  become: true
  file:
    path: "{{ certbot_conf_dir }}/letsencrypt-site"
    state: directory
  when: not certbot_certs.stat.exists

- name: Copy temporary index.html for TLS/SSL certification
  become: true
  copy:
    src: "./files/index.html"
    dest: "{{ certbot_conf_dir }}/letsencrypt-site/index.html"

- name: Copy nginx certbot config
  template:
    src: templates/nginx-certbot.conf
    dest: "{{ nginx_conf_dir }}/{{ server_name }}.conf"
  when: not certbot_certs.stat.exists

- name: Start nginx container
  docker_container:
    name: "{{ nginx_hostname }}"
    image: "{{ nginx_image }}"
    ports:
      - 80:80
    volumes:
      - "{{ nginx_conf_dir }}/{{ server_name }}.conf/:/etc/nginx/conf.d/default.conf"
      - "{{ certbot_conf_dir }}/letsencrypt-site:/usr/share/nginx/html"
  when: not certbot_certs.stat.exists

- name: Issue certificate with certbot command
  docker_container:
    name: "{{ certbot_hostname }}"
    image: "{{ certbot_image }}"
    volumes:
      - "{{ certbot_conf_dir }}/letsencrypt-site:/data/letsencrypt"
      - "{{ certbot_conf_dir }}/etc/letsencrypt:/etc/letsencrypt"
      - "{{ certbot_conf_dir }}/var/lib/letsencrypt:/var/lib/letsencrypt"
      - "{{ certbot_conf_dir }}/var/log/letsencrypt:/var/log/letsencrypt"
    command: certonly --non-interactive --web***ARANGO_USERNAME*** --web***ARANGO_USERNAME***-path=/data/letsencrypt --email {{ certbot_email }} --agree-tos -d {{ server_name }}
  when: not certbot_certs.stat.exists
  register: container_output

- name: Stop nginx container
  docker_container:
    name: "{{ nginx_hostname }}"
    state: absent
