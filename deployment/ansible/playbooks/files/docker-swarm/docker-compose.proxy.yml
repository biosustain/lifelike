version: '3.8'

services:

    traefik:
        image: traefik:v2.2
        ports:
            - 80:80
            - 443:443
        deploy:
            placement:
                constraints:
                    - node.labels.traefik-public.traefik-public-certificates == true
            labels:
                - traefik.enable=true
                - traefik.docker.network=traefik-public
                - traefik.constraint-label=traefik-public
                - "traefik.http.middlewares.admin-auth.basicauth.users=${USERNAME?Variable not set}:${HASHED_PASSWORD?Variable not set}"
                - traefik.http.middlewares.https-redirect.redirectscheme.scheme=https
                - traefik.http.middlewares.https-redirect.redirectscheme.permanent=true
                # HTTP
                - traefik.http.routers.traefik-public-http.rule=Host(`${TRAEFIK_DOMAIN?Variable not set}`)
                - traefik.http.routers.traefik-public-http.entrypoints=http
                - traefik.http.routers.traefik-public-http.middlewares=https-redirect
                # HTTPS
                - traefik.http.routers.traefik-public-https.rule=Host(`${TRAEFIK_DOMAIN?Variable not set}`)
                - traefik.http.routers.traefik-public-https.entrypoints=https
                - traefik.http.routers.traefik-public-https.tls=true
                - traefik.http.routers.traefik-public-https.service=api@internal
                - traefik.http.routers.traefik-public-https.tls.certresolver=le
                - traefik.http.routers.traefik-public-https.middlewares=admin-auth
                - traefik.http.services.traefik-public.loadbalancer.server.port=8080
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock:ro
            - traefik-public-certificates:/certificates
        command:
            - --providers.docker
            - --providers.docker.constraints=Label(`traefik.constraint-label`, `traefik-public`)
            - --providers.docker.exposedbydefault=false
            - --providers.docker.swarmMode=true
            - --entrypoints.http.address=:80
            - --entrypoints.https.address=:443
            - --certificatesresolvers.le.acme.email=${EMAIL?Variable not set}
            - --certificatesresolvers.le.acme.storage=/certificates/acme.json
            - --certificatesresolvers.le.acme.tlschallenge=true
            - --accesslog
            - --log.level=DEBUG
            - --log
            - --api
        networks:
            - traefik-public

    agent:
        image: portainer/agent
        environment:
            AGENT_CLUSTER_ADDR: tasks.agent
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - /var/lib/docker/volumes:/var/lib/docker/volumes
        networks:
            - agent-network
        deploy:
            mode: global
            placement:
                constraints:
                    - node.platform.os == linux

    portainer:
        image: portainer/portainer
        command: -H tcp://tasks.agent:9001 --tlsskipverify
        volumes:
            - portainer-data:/data
        networks:
            - agent-network
            - traefik-public
        deploy:
            placement:
                constraints:
                    - node.role == manager
                    - node.labels.portainer.portainer-data == true
            labels:
                - traefik.enable=true
                - traefik.docker.network=traefik-public
                - traefik.constraint-label=traefik-public
                - traefik.http.routers.portainer-http.rule=Host(`${PORTAINER_DOMAIN?Variable not set}`)
                - traefik.http.routers.portainer-http.entrypoints=http
                - traefik.http.routers.portainer-http.middlewares=https-redirect
                - traefik.http.routers.portainer-https.rule=Host(`${PORTAINER_DOMAIN?Variable not set}`)
                - traefik.http.routers.portainer-https.entrypoints=https
                - traefik.http.routers.portainer-https.tls=true
                - traefik.http.routers.portainer-https.tls.certresolver=le
                - traefik.http.services.portainer.loadbalancer.server.port=9000

volumes:
    traefik-public-certificates:
    portainer-data:

networks:
    agent-network:
        attachable: true
    traefik-public:
        external: true
