#!/usr/bin/env bash

print_usage() {
    echo "
        ================================= USAGE =================================
        Builds and deploys client bundle to the target Google Cloud Compute
        instance.

        Options:
            -r <flag for whether to fetch latest master or not>

        e.g. ->
            ./deploy-client -r true

            This will build the client bundle and deploy it into Google Cloud
        =========================================================================
    "
}

set -o errexit                  # exit on command failure; use <cmd> || true to allow for exception
set -o nounset                  # exit when script tries to use undeclared variables
set -o pipefail                 # catch failure in piped commands

if [ $# -ne 2 ];
then
    echo "Illegal number of arguments -- you must include the following"
    print_usage && exit 1
fi

# Typically this will be true unless we want to re-use what's already pulled from master.
FETCH_FRESH_REPO="true"

while getopts 'r:' flag; do
    case "${flag}" in
        r) FETCH_FRESH_REPO="${OPTARG}" ;;
        *) print_usage && exit 1 ;;
    esac
done

# Enable ssh access
gcloud compute config-ssh && sleep 2

# Current directory
__dir__="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

echo "Removing old client..."
gcloud compute ssh kg-nginx --zone us-central1-c \
    --command="sudo rm -rf *.js *.html *.css *.txt *.ico assets client"

__repo__="${__dir__}/kg-prototypes"

if [ "$FETCH_FRESH_REPO" == "true" ]; then
    echo "Fetching latest master from GitHub"
    # Remove any old builds
    rm -rf ./kg-prototypes
    # Get the latest master
    git clone --depth 1 https://github.com/SBRG/kg-prototypes.git
fi

cd "${__repo__}/client"
yarn install && yarn build

# SCP build into Google Cloud
echo "SCP new build into Google Cloud"
gcloud compute scp --recurse ./dist/client/* root@kg-nginx:/docker/letsencrypt-docker-nginx/src/production/production-site --zone us-central1-c
