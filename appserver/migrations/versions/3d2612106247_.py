"""empty message

Revision ID: 3d2612106247
Revises: 3720d5f44849
Create Date: 2020-06-04 16:55:31.181795

"""
from alembic import context
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3d2612106247'
down_revision = '3720d5f44849'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('projects_collaborator_role',
    sa.Column('appuser_id', sa.Integer(), nullable=False),
    sa.Column('app_role_id', sa.Integer(), nullable=False),
    sa.Column('projects_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['app_role_id'], ['app_role.id'], name=op.f('fk_projects_collaborator_role_app_role_id_app_role'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['appuser_id'], ['appuser.id'], name=op.f('fk_projects_collaborator_role_appuser_id_appuser'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['projects_id'], ['projects.id'], name=op.f('fk_projects_collaborator_role_projects_id_projects'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('appuser_id', 'app_role_id', 'projects_id', name=op.f('pk_projects_collaborator_role'))
    )
    op.drop_table('project_user_role')
    # ### end Alembic commands ###
    if context.get_x_argument(as_dictionary=True).get('data_migrate', None):
        data_upgrades()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('project_user_role',
    sa.Column('appuser_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('app_role_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('project_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['app_role_id'], ['app_role.id'], name='fk_project_user_role_app_role_id_app_role', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['appuser_id'], ['appuser.id'], name='fk_project_user_role_appuser_id_appuser', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], name='fk_project_user_role_project_id_project', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('appuser_id', 'app_role_id', 'project_id', name='pk_project_user_role')
    )
    op.drop_table('projects_collaborator_role')
    # ### end Alembic commands ###
    # NOTE: In practice perfect downgrades are difficult and in some cases
    # impossible! It is more practical to use database backups/snapshots to
    # "downgrade" the database. Changes to the database that we intend to
    # push to production should always be added to a NEW migration.
    # (i.e. "downgrade forward"!)


def data_upgrades():
    """Add optional data upgrade migrations here"""
    pass


def data_downgrades():
    """Add optional data downgrade migrations here"""
    pass
