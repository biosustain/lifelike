"""empty message

Revision ID: 5f74555099d5
Revises: 4e71ffa529c1
Create Date: 2020-04-28 21:08:10.121479

"""
from alembic import context
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5f74555099d5'
down_revision = '4e71ffa529c1'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_files_content_checksum_sha256', table_name='files_content')
    op.create_index(op.f('ix_files_content_checksum_sha256'), 'files_content', ['checksum_sha256'], unique=True)
    # ### end Alembic commands ###
    if context.get_x_argument(as_dictionary=True).get('data_migrate', None):
        data_upgrades()


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_files_content_checksum_sha256'), table_name='files_content')
    op.create_index('ix_files_content_checksum_sha256', 'files_content', ['checksum_sha256'], unique=False)
    # ### end Alembic commands ###
    # NOTE: In practice perfect downgrades are difficult and in some cases
    # impossible! It is more practical to use database backups/snapshots to
    # "downgrade" the database. Changes to the database that we intend to
    # push to production should always be added to a NEW migration.
    # (i.e. "downgrade forward"!)


def data_upgrades():
    """Add optional data upgrade migrations here"""
    pass


def data_downgrades():
    """Add optional data downgrade migrations here"""
    pass
