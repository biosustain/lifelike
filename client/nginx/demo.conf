server {
    listen       80;
    server_name  demo.***ARANGO_DB_NAME***.bio;

    #charset koi8-r;
    #access_log  /var/log/nginx/host.access.log  main;

    location / {
        rewrite ^ https://$host$request_uri? permanent;
    }

    # for certbot renewal
    location ~ /.well-known/acme-challenge {
        allow all;
        ***ARANGO_USERNAME*** /data/letsencrypt;
    }
}

server {
    server_name demo.***ARANGO_DB_NAME***.bio;
    listen 443 ssl http2;

    # https://www.digitalocean.com/community/tutorials/how-to-add-the-gzip-module-to-nginx-on-centos-7
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

    # set size limit of uploads
    client_max_body_size 0;

    # don't send the nginx version number in error pages and Server header
    server_tokens off;

    ssl_buffer_size 8k;

    # Diffie-Hellman parameter for DHE ciphersuites, recommended 2048 bits
    ssl_dhparam /etc/ssl/certs/dhparam-2048.pem;

    # enables server-side protection from BEAST attacks
    # http://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html
    ssl_prefer_server_ciphers on;
    # disable SSLv3(enabled by default since nginx 0.8.19) since it's less secure then TLS http://en.wikipedia.org/wiki/Secure_Sockets_Layer#SSL_3.0
    ssl_protocols TLSv1.2 TLSv1.1 TLSv1;
    # ciphers chosen for forward secrecy and compatibility
    # http://blog.ivanristic.com/2013/08/configuring-apache-nginx-and-openssl-for-forward-secrecy.html
    ssl_ciphers ECDH+AESGCM:ECDH+AES256:ECDH+AES128:DH+3DES:!ADH:!AECDH:!MD5;

    # http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox/
    resolver 8.8.8.8 8.8.4.4;
    ssl_stapling on;
    ssl_stapling_verify on;

    ssl_certificate /etc/letsencrypt/live/demo.***ARANGO_DB_NAME***.bio/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/demo.***ARANGO_DB_NAME***.bio/privkey.pem;

    ssl_session_tickets off;

    ***ARANGO_USERNAME*** /usr/share/nginx/html;
    index landing.html index.html index.htm;

    location ~ .*\.css$|.*\.js$ {
        # Cache the static assets until we rebuild a new app
        add_header Cache-Control 'max-age=31449600';
    }

    location / {
        add_header Cache-Control "no-store, no-cache, must-revalidate";
        try_files $uri $uri/ /index.html =404;
    }

    location /api/ {
        rewrite ^/api(.*)$ $1 break;
        proxy_pass          http://appserver:5000;
        proxy_set_header    HOST $host;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Scheme $scheme;
        proxy_ssl_certificate /etc/letsencrypt/live/demo.***ARANGO_DB_NAME***.bio/fullchain.pem;
        proxy_ssl_certificate_key /etc/letsencrypt/live/demo.***ARANGO_DB_NAME***.bio/privkey.pem;
        proxy_read_timeout 120s;
    }

    # redirect server error pages to the static page /50x.html
    error_page   500 502 503 504  /50x.html;
    location = /50x.html {
        ***ARANGO_USERNAME***   /usr/share/nginx/html;
    }
}
