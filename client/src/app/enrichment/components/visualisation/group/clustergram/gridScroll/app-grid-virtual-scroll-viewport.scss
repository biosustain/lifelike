$background-color: white;
$size: 27px;
$column-header-scrollable-height: $size*10;

// Scrolling container.
app-grid-virtual-scroll-viewport {

  display: grid;
  grid-template-areas:
    "cover spacer"
    "cover columnheader"
    "rowheader content";
  position: relative;
  overflow: auto;
  contain: strict;
  transform: translateZ(0);
  will-change: scroll-position;
  -webkit-overflow-scrolling: touch;

  &:after {
    $blurred-radius: $size*2;
    content: "";
    grid-area: cover;
    position: sticky;
    top: -$column-header-scrollable-height;
    left: 0;
    transform: translate(-$blurred-radius, -$blurred-radius);
    box-shadow: $blurred-radius/2 $blurred-radius/2 $blurred-radius/2 $blurred-radius/4 $background-color;
    background-color: $background-color;
  }

  &:before {
    content: "";
    grid-area: spacer;
    height: $column-header-scrollable-height;
  }
}

// Wrapper element for the rendered content. This element will be transformed to push the rendered
// content to its correct offset in the data set as a whole.
.app-virtual-scroll-content-wrapper {
  position: absolute;
  top: 0;
  left: 0;
  //contain: content;

  // Note: We can't put `will-change: transform;` here because it causes Safari to not update the
  // viewport's `scrollHeight` when the spacer's transform changes.
}

.app-virtual-scroll-content-wrapper {
  min-height: 100%;
  min-width: 100%;
}

$stripe-color: #F2F2F2;
$stripe-border-color: #e9ecef;
$stripe-border-size: 1px;

@mixin stripes {
  background-image: repeating-linear-gradient(
                  $stripe-border-color 0,
                  $stripe-border-color $stripe-border-size,
                  $stripe-color $stripe-border-size,
                  $stripe-color ($size - $stripe-border-size),
                  $stripe-border-color ($size - $stripe-border-size),
                  $stripe-border-color $size,
                  $background-color $size,
                  $background-color $size*2
  );
}

// Spacer element that whose width or height will be adjusted to match the size of the entire data
// set if it were rendered all at once. This ensures that the scrollable content region is the
// correct size.
.app-virtual-scroll-spacer {
  position: absolute;
  top: 0;
  left: 0;
  height: 1px;
  width: 1px;
  transform-origin: 0 0;
  z-index: -1;

  @include stripes;

  // Note: We can't put `will-change: transform;` here because it causes Safari to not update the
  // viewport's `scrollHeight` when the spacer's transform changes.
}

.columnHeader {
  grid-area: columnheader;
}

.rowHeader {
  grid-area: rowheader;
}

.app-virtual-scroll-content-wrapper {
  grid-area: content;
}
