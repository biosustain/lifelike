@import "~bootstrap/scss/functions";
@import "~bootstrap/scss/variables";
@import "~bootstrap/scss/mixins";

.textarea-grow-wrap {
  /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
  cursor: text;
  display: grid;
  grid-template-columns: 100%;
  height: fit-content;
  max-height: 300px;
  // We set this to prevent large initial block. Unsetted at the bottom of the file
  overflow-x: hidden;
  overflow-y: auto;
  resize: vertical;

  &:focus-within {
    background-color: $input-focus-bg;
    border-color: $input-focus-border-color;
    color: $input-focus-color;
    outline: 0;
    @if $enable-shadows {
      @include box-shadow($input-box-shadow, $input-focus-box-shadow);
    } @else {
      // Avoid using mixin so we can pass custom focus shadow properly
      box-shadow: $input-focus-box-shadow;
    }
  }

  & textarea:focus {
    background-color: $input-bg;
    border-color: $input-border-color;
    box-shadow: none;
    color: $input-color;
    outline: 0;
  }
}

.textarea-grow-wrap > textarea {
  /* You could leave this, but after a user resizes, then it ruins the auto sizing */
  border: none;
  box-sizing: border-box;
  overflow: hidden;
  resize: none;

  /* Firefox shows scrollbar on growth, you can hide like this. */
  width: inherit;
}

// When we recalculate the height (resize) we unset max height
.textarea-grow-wrap[style*="height"] {
  max-height: unset;
}
