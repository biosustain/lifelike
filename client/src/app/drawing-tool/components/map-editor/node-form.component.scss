@import '~bootstrap/scss/functions';
@import '~bootstrap/scss/variables';
@import '~bootstrap/scss/mixins';

.textarea-grow-wrap {
  /* easy way to plop the elements on top of each other and have them both sized based on the tallest one's height */
  display: inline-block;
  resize: vertical;
  overflow-x: hidden;
  overflow-y: auto;
  max-height: 200px;
  height: fit-content;
  grid-template-columns: 100%;

  &:focus-within {
    color: $input-focus-color;
    background-color: $input-focus-bg;
    border-color: $input-focus-border-color;
    outline: 0;
    @if $enable-shadows {
      @include box-shadow($input-box-shadow, $input-focus-box-shadow);
    } @else {
      // Avoid using mixin so we can pass custom focus shadow properly
      box-shadow: $input-focus-box-shadow;
    }
  }

  & textarea:focus {
    color: $input-color;
    background-color: $input-bg;
    border-color: $input-border-color;
    outline: 0;
    box-shadow: none;
  }
}

.textarea-grow-wrap::after {
  /* Note the weird space! Needed to prevent jumpy behavior */
  //content: attr(data-replicated-value);
  content: attr(data-replicated-value) " ";

  /* This is how textarea text behaves */
  white-space: pre-wrap;

  /* Hidden from view, clicks, and screen readers */
  visibility: hidden;
}

.textarea-grow-wrap > textarea {
  /* You could leave this, but after a user resizes, then it ruins the auto sizing */
  box-sizing: border-box;
  width: inherit;
  height: inherit;
  resize: none;
  border: none;

  /* Firefox shows scrollbar on growth, you can hide like this. */
  overflow: hidden;
}

.textarea-grow-wrap > textarea,
.textarea-grow-wrap::after {
  /* Identical styling required!! */
  border: none;
  padding: 0;
  font: inherit;

  /* Place on top of each other */
  grid-area: 1 / 1 / 2 / 2;
}
