#!/usr/bin/env bash

__dir__="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

print_usage() {
    echo "
    ================================= USAGE =================================
    Wrapper for running terraform. Script will execute terraform plan and
    handle pulling/pushing of state files to the cloud storage.

    -t          <target for deployment e.g. dev, staging, prod>

    e.g. ->
        ./run-terraform -t dev
    =========================================================================
    "
}

set -o errexit                  # exit on command failure; use <cmd> || true to allow for exception
set -o nounset                  # exit when script tries to use undeclared variables
set -o pipefail

if [ $# -ne 2 ];
then
    echo "Illegal number of arguments -- you must include the following"
    print_usage && exit 1
fi

TARGET=""

while getopts "t:" flag; do
    case "${flag}" in
        t) TARGET="${OPTARG}";;
        *) print_usage && exit 1;;
    esac
done

# set project as a precaution because we're uploading the state file
# outside of terraform. So to avoid uploading to the wrong project
gcloud config set project able-goods-221820

exec() {
    gsutil cp gs://kg-secrets/terraform.tfstate.create.${TARGET} . || true # continue if file does not exist
    mv ./terraform.tfstate.create.${TARGET} ./terraform.tfstate || true # continue if file does not exist
    gcloud kms decrypt --location global --keyring kg-secrets --key kg-secrets-key --ciphertext-file terraform.tfstate --plaintext-file terraform.tfstate || true # continue if file does not exist

    terraform init && terraform apply

    mv ./terraform.tfstate ./terraform.tfstate.create.${TARGET} && \
    gcloud kms encrypt --location global --keyring kg-secrets --key kg-secrets-key --ciphertext-file terraform.tfstate.create.${TARGET} --plaintext-file terraform.tfstate.create.${TARGET}
    gsutil cp ./terraform.tfstate.create.${TARGET} gs://kg-secrets

    # Decrypt for personal use
    gcloud kms decrypt --location global --keyring kg-secrets --key kg-secrets-key --ciphertext-file terraform.tfstate.create.${TARGET} --plaintext-file terraform.tfstate.create.${TARGET}
}

exec $TARGET