log_format upstream_logging '[$time_local] $remote_addr - $remote_user - $server_name to: $upstream_addr: $request $upstream_cache_status upstream_response_time $upstream_response_time msec $msec request_time $request_time';

##### Start Webserver Block #####

# HTTP server to redirect all 80 traffic to SSL/HTTPS
server {
    listen 80;
    server_name ${FRONTEND_DOMAIN};

    location /.well-known/acme-challenge/ {
        ***ARANGO_USERNAME*** /var/www/certbot;
    }

    # Redirect the request to HTTPS
    location / {
        return 301 https://${FRONTEND_DOMAIN}$request_uri;
    }
}

# HTTPS server to handle JupyterHub
server {
    listen 443 ssl;

    server_name ${FRONTEND_DOMAIN};

    # If they come here using HTTP, bounce them to the correct scheme
    error_page 497 http://${FRONTEND_DOMAIN}$request_uri;

    ssl_certificate /etc/nginx/ssl/live/${FRONTEND_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/${FRONTEND_DOMAIN}/privkey.pem;

    # Managing literal requests to the Webserver frontend
    location / {
        proxy_pass ${FRONTEND_UPSTREAM};
        proxy_set_header    Host $host;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Scheme $scheme;
    }
}

# ##### Start JupyterHub Block #####

# # HTTP server to redirect all 80 traffic to SSL/HTTPS
server {
    listen 80;
    server_name ${JUPYTERHUB_DOMAIN};

    location /.well-known/acme-challenge/ {
        ***ARANGO_USERNAME*** /var/www/certbot;
    }

    location / {
        return 301 https://${JUPYTERHUB_DOMAIN}$request_uri;
    }
}

# # HTTPS server to handle JupyterHub
server {
    listen 443 ssl;

    server_name ${JUPYTERHUB_DOMAIN};

    # If they come here using HTTP, bounce them to the correct scheme
    error_page 497 http://${JUPYTERHUB_DOMAIN}$request_uri;

    ssl_certificate /etc/nginx/ssl/live/${JUPYTERHUB_DOMAIN}/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/${JUPYTERHUB_DOMAIN}/privkey.pem;

    # Managing literal requests to the JupyterHub frontend
    location / {
        proxy_pass ${JUPYTERHUB_UPSTREAM};
        proxy_set_header    Host $host;
        proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header    X-Scheme $scheme;
    }
}
