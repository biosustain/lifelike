version: "3.8"

# ----------------------------------------
# Appserver template anchor
# ----------------------------------------
x-appserver: &appserver
  build: ./appserver
  restart: unless-stopped
  environment:
    # Flask
    - FLASK_ENV=development

    # Postgres
    - POSTGRES_HOST=postgres
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres
    - POSTGRES_DB=postgres

    # Neo4j
    - NEO4J_HOST=neo4j
    - NEO4J_AUTH=neo4j/password

    # Redis
    - REDIS_HOST=redis

    # Statistical Enrichment
    - STATISTICAL_ENRICHMENT_URL=http://statistical-enrichment:5010

    # PDF Parser
    - PDFPARSER_URL=http://pdfparser:7600

    # ElasticSearch
    - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
  volumes:
    - lmdb:/home/n4j/neo4japp/services/annotations/lmdb

services:
  # ----------------------------------------
  # Internal services
  # ----------------------------------------
  appserver:
    <<: *appserver
    ports:
      - 5000:5000

  worker:
    <<: *appserver
    command: rq worker -c rq_config --with-scheduler

  webserver:
    build: ./client
    restart: unless-stopped
    ports:
      - 8080:80

  statistical-enrichment:
    build: ./statistical-enrichment
    restart: unless-stopped
    ports:
      - 5010:5010
    environment:
      # Flask
      - FLASK_APP_CONFIG=Development
      - FLASK_DEBUG=1
      - FLASK_ENV=development

      # Neo4j
      - NEO4J_HOST=neo4j
      - NEO4J_AUTH=neo4j/password

      # Redis
      - REDIS_HOST=redis

  cache-invalidator:
    build: ./cache-invalidator
    restart: unless-stopped
    environment:
      # Flask
      - LOG_LEVEL=debug

      # Neo4j
      - NEO4J_HOST=neo4j
      - NEO4J_AUTH=neo4j/password

      # Redis
      - REDIS_HOST=redis

volumes:
  lmdb:
