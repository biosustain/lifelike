<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
  xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:pro="http://www.liquibase.org/xml/ns/pro"
  xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-3.8.xsd http://www.liquibase.org/xml/ns/pro http://www.liquibase.org/xml/ns/pro/liquibase-pro-3.8.xsd">
  <!--
    Neo4j does not allow the same transaction for changing the scheme and writes.
    So group changeSets together by id="some text-#"
    And separate changeSets grouping by empty new line space
  -->

  <changeSet id="LL-2193-association-id-constraint-1" author="Binh Vu">
    <comment>Add association id constraint (1st changeset)</comment>
    <sql>DROP INDEX ON :Association(id)</sql>
  </changeSet>
  <changeSet id="LL-2193-association-id-constraint-2" author="Binh Vu">
    <comment>Add association id constraint (2nd changeset)</comment>
    <sql>
      CALL apoc.periodic.iterate(
        "match (n1)-[:HAS_ASSOCIATION]->(a:Association)-[:HAS_ASSOCIATION]->(n2) return n1, a, n2",
        "set a.id = n1.id + '-' + n2.id + '-' + a.type", {batchSize:10000, parallel: true}
      )
    </sql>
  </changeSet>
  <changeSet id="LL-2193-association-id-constraint-3" author="Binh Vu">
    <comment>Add association id constraint (3rd changeset)</comment>
    <sql>CREATE CONSTRAINT constraint_association_id ON (n:Association) ASSERT n.id IS UNIQUE</sql>
  </changeSet>

  <!-- ######## -->

  <changeSet id="LL-2193-set-snippet-id-1" author="Binh Vu">
    <comment>Set snippet id (1st changeset)</comment>
    <sql>DROP INDEX ON :Snippet(id)</sql>
  </changeSet>
  <changeSet id="LL-2193-set-snippet-id-2" author="Binh Vu">
    <comment>Set snippet id (2nd changeset)</comment>
    <sql>
    <!-- takes about 10 minutes -->
      CALL apoc.periodic.iterate(
        "match (n:Snippet)-[:IN_PUB]-(p) return n, p",
        "set n.id = p.pmid + '-' + n.sentence_num", {batchSize:10000, parallel: true}
      )
    </sql>
  </changeSet>

  <!-- ######## -->

  <changeSet id="LL-2193-set-predicts-properties" author="Binh Vu">
    <comment>Set properties for PREDICTS relationship</comment>
    <sql>
      CALL apoc.periodic.iterate(
        "match (n:Snippet)-[p:PREDICTS]-(a) return n, p",
        "set p.entry1_text = n.entry1_text, p.entry2_text = n.entry2_text, p.path = n.path",
        {batchSize:5000, parallel: true}
      )
    </sql>
  </changeSet>

  <!-- ######## -->

  <changeSet id="LL-2193-remove-snippet-properties" author="Binh Vu">
    <comment>Remove snippet properties</comment>
    <sql>
      CALL apoc.periodic.iterate(
        "match (n:Snippet) return n",
        "remove n.path, n.pmid, n.entry1_text, n.entry1_type, n.entry2_text, n.entry2_type, n.sentence_num",
        {batchSize:5000, parallel: true}
      )
    </sql>
  </changeSet>

  <!-- ######## -->

  <changeSet id="LL-2193-merge-snippets" author="Binh Vu">
    <customChange
      class="edu.ucsd.sbrg.liquibase.neo4j.LoopHandler"
      loopQuery="MATCH (n:Snippet) WITH n.id AS id, collect(n.id) AS nodes WHERE size(nodes) > 1 RETURN nodes LIMIT 5000"
      execQuery="
        UNWIND $nodes AS node_ids
        MATCH (n:Snippet) WHERE n.id IN node_ids
        WITH node_ids, collect(n) AS snippets
        CALL apoc.refactor.mergeNodes(snippets, {properties: 'discard', mergeRels:true}) YIELD node
        RETURN node_ids, node
      "/>
  </changeSet>

  <!-- TODO: finish up the other queries -->
</databaseChangeLog>
