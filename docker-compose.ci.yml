version: "3.9"
name: "***ARANGO_DB_NAME***-ci"
# This is configuration aids running ***ARANGO_DB_NAME*** instance in CI enviroment (without writting to disk)

x-appserver: &appserver
  environment:
    ELASTIC_FILE_INDEX_ID: file_ci

services:
  dev-reset:
    extends:
      file: docker-compose.yml
      service: appserver
    healthcheck:
      test: exit 0
    entrypoint: ./bin/dev-db-setup
    networks:
      - backend
    depends_on:
      # This service resets following two databases
      pgdatabase:
        condition: service_healthy
      elastic:
        condition: service_healthy

  migrate:
    extends:
      file: docker-compose.local.yml
      service: migrate
    healthcheck:
      test: exit 0
    commands: ["upgrade"]
    networks:
      - backend
    depends_on:
      dev-reset:
        condition: service_completed_successfully

  appserver:
    extends:
      file: docker-compose.yml
      service: appserver
    <<: *appserver
    depends_on:
      migrate:
        condition: service_completed_successfully

  worker:
    extends:
      file: docker-compose.yml
      service: worker
    <<: *appserver

  pdfparser:
    extends:
      file: docker-compose.yml
      service: pdfparser

  pgdatabase:
    extends:
      file: docker-compose.yml
      service: pgdatabase
    restart: on-failure
    environment:
      POSTGRES_PASSWORD: postgres

  graphdatabase:
    extends:
      file: docker-compose.yml
      service: graphdatabase
    image: neo4j:4.4-community
    restart: on-failure
    environment:
      NEO4J_AUTH: neo4j/password
      NEO4JLABS_PLUGINS: '["apoc", "n10s"]'

  arangodb:
    extends:
      file: docker-compose.yml
      service: arangodb
    image: arangodb:3.9
    environment:
      ARANGO_ROOT_PASSWORD: password
      LIFELIKE_DB_NAME: ***ARANGO_DB_NAME***

  redis:
    extends:
      file: docker-compose.yml
      service: redis
    image: redis:7-alpine
    command: redis-server --requirepass password

  elasticsearch:
    extends:
      file: docker-compose.yml
      service: elasticsearch
    image: ghcr.io/sbrg/***ARANGO_DB_NAME***-elasticsearch:latest
    environment:
      discovery.type: single-node
      bootstrap.memory_lock: true

volumes:
  lmdb:

networks:
  frontend:
  backend:
  elastic:
